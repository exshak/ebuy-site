# import * from './generated/prisma.graphql'

type Query {
  me: User
  post(id: ID!): Post
  posts: [Post!]!
  search(
    where: PostWhereInput
    orderBy: PostOrderByInput
    filter: String
    first: Int
    skip: Int
  ): [Post]!
  drafts: [Post!]!
  message(id: ID!): Message
  messages: [Message!]!
  subcategories: [SubCategory!]!
}

type Mutation {
  signup(email: String!, password: String!, name: String!): AuthPayload!
  signin(email: String!, password: String!): AuthPayload!
  createPost(
    title: String!
    description: String!
    location: String!
    price: Int!
    subcategoryId: ID!
    image: String
    imageLarge: String
    published: Boolean
  ): Post!
  updatePost(
    id: ID!
    title: String!
    description: String!
    price: Int!
    image: String
    imageLarge: String
  ): Post
  deletePost(id: ID!): Post
  # publishPost(id: ID!): Post
  createMessage(title: String!, content: String!): Message!
  deleteMessage(id: ID!): Message!
}

type AuthPayload {
  token: String!
  user: User!
}
